{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","nextSlide","useCallback","prevIndex","newIndex","remainingIndex","length","prevSlide","className","style","overflow","width","margin","map","image","index","transform","transition","src","alt","height","type","onClick","disabled","App","state","this","value","onChange","event","newValue","Number","target","setState","prevState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e2ebe69.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const nextSlide = useCallback(() => {\n    setCurrentIndex((prevIndex) => {\n      const newIndex = prevIndex + step;\n      const remainingIndex = images.length - newIndex;\n\n      if (infinite) {\n        return newIndex % images.length;\n      }\n\n      if (remainingIndex >= frameSize) {\n        return newIndex;\n      }\n\n      return remainingIndex > 0 ? currentIndex + 1 : 0;\n    });\n  }, [infinite, setCurrentIndex, step, images, frameSize, currentIndex]);\n\n  const prevSlide = useCallback(() => {\n    setCurrentIndex((prevIndex) => {\n      const newIndex = prevIndex - step;\n\n      if (infinite) {\n        return (newIndex + images.length) % images.length;\n      }\n\n      return newIndex < 0 ? images.length - frameSize : newIndex;\n    });\n  }, [infinite, setCurrentIndex, step, images, frameSize]);\n\n  return (\n\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{\n          overflow: 'hidden',\n          width: `${itemWidth * frameSize}px`,\n          margin: '0 auto',\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image, index: number) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${-currentIndex * itemWidth}px)`,\n                transition: `transform ${animationDuration / 1000}s ease-in-out`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index}`}\n                style={{\n                  height: `${itemWidth}`,\n                  width: `${itemWidth}`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__container--button\">\n          <button\n            className={`Carousel__button ${currentIndex === 0 ? 'disabled' : ''}`}\n            type=\"button\"\n            onClick={prevSlide}\n            disabled={currentIndex === 0}\n          >\n            Prev\n          </button>\n          <button\n            className={`Carousel__button ${currentIndex + step >= images.length ? 'disabled' : ''}`}\n            type=\"button\"\n            onClick={nextSlide}\n            disabled={currentIndex + step >= images.length}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const { images } = this.state;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const changeWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(event.target.value);\n\n      this.setState((prevState) => ({\n        ...prevState,\n        itemWidth: newValue,\n      }));\n    };\n\n    const changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(event.target.value);\n\n      this.setState((prevState) => ({\n        ...prevState,\n        frameSize: newValue,\n      }));\n    };\n\n    const changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(event.target.value);\n\n      this.setState((prevState) => ({\n        ...prevState,\n        step: newValue,\n      }));\n    };\n\n    const changeAnimationDuration\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = Number(event.target.value);\n\n      this.setState((prevState) => ({\n        ...prevState,\n        animationDuration: newValue,\n      }));\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n        <div className=\"App__labels\">\n          <label className=\"App__input\">\n            <b className=\"App__margin\">Item Width:</b>\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={changeWidth}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            <b className=\"App__margin\">Frame Size:</b>\n            <input\n              type=\"number\"\n              value={frameSize}\n              onChange={changeFrameSize}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            <b className=\"App__margin\">Step</b>\n            <input\n              type=\"number\"\n              value={step}\n              onChange={changeStep}\n            />\n          </label>\n\n          <label className=\"App__input\">\n            <b className=\"App__margin\">Fnimation Duration:</b>\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={changeAnimationDuration}\n            />\n          </label>\n\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={1000}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}